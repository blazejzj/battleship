@import "./variables.scss";

.battle-wrapper {
    width: 100%;
    display: grid;
    grid-template-columns: 1fr 1fr;
    justify-items: center;
    gap: 1rem;
    margin: 0 auto;
    max-width: $battle-max-width;
    .board.friendly,
    .board.enemy {
        @include mainBackground;
        padding: 1rem;
        .map-title-container {
            order: 1;
            grid-column: 2/3;
        }
    }
    .field-container {
        &.field-container-enemy {
            background: url("../assets/images/grid.svg"),
                radial-gradient(
                    circle,
                    rgba(2, 0, 36, 0) 0%,
                    rgba(243, 166, 64, 0.15449929971988796) 60%,
                    rgba(243, 166, 64, 0.25253851540616246) 85%,
                    rgba(243, 166, 64, 0.3981967787114846) 100%
                );
            &::before {
                -webkit-filter: invert(87%) sepia(18%) saturate(3703%)
                    hue-rotate(325deg) brightness(96%) contrast(98%) !important;
                filter: invert(87%) sepia(18%) saturate(3703%)
                    hue-rotate(325deg) brightness(96%) contrast(98%) !important;
            }
            img {
                -webkit-filter: invert(63%) sepia(99%) saturate(360%)
                    hue-rotate(343deg) brightness(98%) contrast(94%);
                filter: invert(63%) sepia(99%) saturate(360%) hue-rotate(343deg)
                    brightness(98%) contrast(94%);
            }
        }
        &::after {
            display: none;
        }
        .map-title-container {
            .map-title {
                font-size: $font-size-normal-large-responsive;
                color: $orange-light-color;
            }
        }
        .field {
            position: relative;
            cursor: crosshair;

            &::before {
                @include pseudoOverlay;
                transform: translate(-37.5rem, -40.625rem) rotate(-315deg);
                height: 30%;
                width: 12.5rem;
                border: 0.1875rem solid #fefefe;
                /* Remove border-radius to prevent circles */
                /* border-radius: 1rem; */ /* Commented out */
                background-color: #fefefe;
                opacity: 1;
                transition: all 0.15s cubic-bezier(0.7, 0.03, 0.85, 0.43);
            }

            &::after {
                @include pseudoOverlay;
                @include fullSize;
                /* Remove border-radius to prevent circles */
                /* border-radius: 100%; */ /* Commented out */
                opacity: 0;
                content: ""; /* Will set content in hit/miss states */
            }

            &.hit::before {
                animation: shot 0.35s 0.175s 1 forwards;
                -webkit-animation: shot 0.35s 0.175s 1 forwards;
            }

            &.hit::after {
                /* Use two pseudo-elements to form the cross */
                background-color: transparent;
                animation: none;
            }

            &.hit::after,
            &.hit::before {
                content: "";
                position: absolute;
                top: 50%;
                left: 50%;
                width: 80%;
                height: 4px; /* Thickness of the cross lines */
                background-color: rgba(255, 0, 0, 0.5); /* Red for 'hit' */
                transform-origin: center;
                opacity: 0;
                animation: showCrossLine 0.5s forwards;
                animation-delay: 0.35s;
            }

            &.hit::before {
                transform: translate(-50%, -50%) rotate(45deg);
            }

            &.hit::after {
                transform: translate(-50%, -50%) rotate(-45deg);
            }

            &.miss::before {
                animation: miss 0.35s 0.175s 1 forwards;
                -webkit-animation: miss 0.35s 0.175s 1 forwards;
            }

            &.miss::after {
                /* Use two pseudo-elements to form the cross */
                background-color: transparent;
                animation: none;
            }

            &.miss::after,
            &.miss::before {
                content: "";
                position: absolute;
                top: 50%;
                left: 50%;
                width: 80%;
                height: 4px; /* Thickness of the cross lines */
                background-color: rgba(0, 153, 255, 0.5); /* Blue for 'miss' */
                transform-origin: center;
                opacity: 0;
                animation: showCrossLine 0.5s forwards;
                animation-delay: 0.35s;
            }

            &.miss::before {
                transform: translate(-50%, -50%) rotate(45deg);
            }

            &.miss::after {
                transform: translate(-50%, -50%) rotate(-45deg);
            }
        }
    }

    .message.battle {
        @include flexRowStartCenter;
        @include mainBackground;
        width: 100%;
        grid-column: 1/3;
        gap: 0.5rem;
        padding: 1rem;
        border-radius: $main-border-radius;
        font-size: $font-size-normal-responsive;
        transition: all 0.6s;
        &.agent {
            .message-container {
                .message-agent {
                    color: $blue-light-color;
                }
                .typed-cursor {
                    background-color: $blue-light-color;
                }
            }
        }

        &.enemy {
            justify-content: end;
            .message-image {
                order: 2;
            }
            .message-container {
                order: 1;
                .message-enemy {
                    color: $orange-light-color;
                }
                .typed-cursor {
                    background-color: $orange-light-color;
                }
            }
        }

        .message-image {
            height: $image-height;
        }

        .message-container {
            display: inline;
            text-align: start;
            .message-agent,
            .message-enemy {
                display: inline;
            }
            .typed-cursor {
                position: relative;
                left: 0.0625rem;
                bottom: -0.1875rem;
                display: inline-block;
                width: 0.5rem;
                height: 1rem;
                color: transparent;
                overflow: hidden;
                -webkit-animation-duration: 1.5s;
                animation-duration: 1.5s;
            }
        }
    }
}

.message.battle.on-turn {
    &.agent,
    &.enemy {
        .message-container {
            .message-agent,
            .message-enemy {
                color: $main-opposite-color;
            }
            .typed-cursor {
                background-color: $main-opposite-color;
            }
        }
    }
    -webkit-animation: enemyTurn 0.6s ease forwards;
    animation: enemyTurn 0.6s ease forwards;
}

.message.battle.agent {
    position: relative;
    overflow: hidden;
    &::after {
        @include pseudoUnderlay;
        @include fullSize;
        inset: 0;
        width: 200%;
        background-position: left;
        background: rgb(135, 206, 235);
        background: linear-gradient(
            90deg,
            rgba(135, 206, 235, 1) 0%,
            rgba(135, 206, 235, 0.8029586834733894) 20%,
            rgba(135, 206, 235, 0.604079131652661) 40%,
            rgba(135, 206, 235, 0.4023984593837535) 60%,
            rgba(135, 206, 235, 0.19511554621848737) 80%,
            rgba(135, 206, 235, 0) 100%
        );
        transform: translateX(-100%);
    }
}

.message.battle.enemy {
    position: relative;
    overflow: hidden;
    &::after {
        @include pseudoUnderlay;
        @include fullSize;
        inset: 0;
        width: 200%;
        background-position: left;
        background: rgb(243, 166, 64);
        background: linear-gradient(
            90deg,
            rgba(243, 166, 64, 0) 0%,
            rgba(243, 166, 64, 0.20211834733893552) 20%,
            rgba(243, 166, 64, 0.40379901960784315) 40%,
            rgba(243, 166, 64, 0.6026785714285714) 60%,
            rgba(243, 166, 64, 0.7987570028011204) 80%,
            rgba(243, 166, 64, 1) 100%
        );
        transform: translateX(100%);
    }
    .message-container {
        text-align: end;
    }
}

.message.battle.agent.on-turn {
    &::after {
        -webkit-animation: seepAgent 1s 1 forwards;
        animation: seepAgent 1s 1 forwards;
    }
}

.message.battle.enemy.on-turn {
    &::after {
        -webkit-animation: seepEnemy 1s 1 forwards;
        animation: seepEnemy 1s 1 forwards;
    }
}

@media screen and (max-width: 48rem) {
    .battle-wrapper {
        display: grid;
        grid-template-rows: auto;
        align-items: center;
        justify-items: start;
        .board.enemy {
            margin-left: auto;
        }
        .board {
            max-width: 25rem;
            grid-column: 1/3;
        }
    }
}

@media screen and (max-width: 30rem) {
    .battle-wrapper {
        gap: 0.5rem;
        .board.friendly {
            width: 12.5rem;
            margin-right: auto;
        }
        .board.friendly.off-turn {
            -webkit-animation: grow 1.5s 1 forwards;
            animation: grow 1.5s 1 forwards;
        }
        .board.friendly.on-turn {
            -webkit-animation: shrink 1.5s 1 forwards;
            animation: shrink 1.5s 1 forwards;
        }
        .board.enemy.off-turn {
            -webkit-animation: grow 1.5s 1 forwards;
            animation: grow 1.5s 1 forwards;
        }
        .board.enemy.on-turn {
            -webkit-animation: shrink 1.5s 1 forwards;
            animation: shrink 1.5s 1 forwards;
        }
    }

    .field.hit::before,
    .field.miss::before {
        transform: none !important;
        animation: none !important;
    }
}
